import math

# MATERIAL LIBRARY
# Gypsum
gypsum = {};
gypsum["speedsound"] = 1466.312;
gypsum["density"] = 1540;
gypsum["youngmodulus"] = 5.96*pow(10.0,9.0);
gypsum["poissonratio"] = 0.2;
gypsum["shearmodulus"] = 2.483333*pow(10.0,9.0);
gypsum["bulkmodulus"] = 3.31111*pow(10.0,9.0);
gypsum["yieldtensilestrength"] = 3.2*pow(10.0,6.0);
gypsum["kdamage"] = 5392570000000000000000000000000000000;
gypsum["mdamage"] = 9.0;
gypsum["cohesion"] = 5203840.0;
gypsum["cohnpt1"] = 2601920.0;
gypsum["cohnpt2"] = 0.0;
gypsum["plasstrpt1"] = 0.05;
gypsum["plasstrpt2"] = 0.1;
gypsum["frictionangle"] = 55.818340999999997;

# Chromite
# Chromite

# chromite = {};
# chromite["speedsound"] = 2886.75135;
# chromite["density"] = 2500;
# chromite["youngmodulus"] = 50.0*pow(10.0,9.0);
# chromite["poissonratio"] = 0.1;
# chromite["shearmodulus"] = 2.272727E+10;#*pow(10.0,9.0);
# chromite["bulkmodulus"] = 2.083333E+10;#20.83*pow(10.0,9.0);
# chromite["yieldtensilestrength"] = 16.52*pow(10.0,6.0);
# chromite["kdamage"] = 1.59*pow(10.0,38.0);
# chromite["mdamage"] = 9.5;
# chromite["cohesion"] = 22.38e6;#34.94*pow(10.0,6.0);
# chromite["cohnpt1"] = 22.38e6*0.5;#5.8233*pow(10.0,6.0);
# chromite["cohnpt2"] = 22.38e5;#0.3494*pow(10.0,6.0);
# chromite["plasstrpt1"] = 0.1;
# chromite["plasstrpt2"] = 0.5;
# chromite["frictionangle"] = 59.51;#51.48;

RockJoint = {};
RockJoint["speedsound"] = 2236.06798;
RockJoint["density"] = 2500;
RockJoint["youngmodulus"] = 30.0*pow(10.0,9.0);
RockJoint["poissonratio"] = 0.1;
RockJoint["shearmodulus"] = 1.363636E+10;#*pow(10.0,9.0);
RockJoint["bulkmodulus"] = 1.250000E+10;#20.83*pow(10.0,9.0);
RockJoint["yieldtensilestrength"] = 16.52*pow(10.0,6.0);
RockJoint["kdamage"] = 1.59*pow(10.0,38.0);
RockJoint["mdamage"] = 9.5;
RockJoint["cohesion"] = 34.94*pow(10.0,6.0);
RockJoint["cohnpt1"] = 5.8233*pow(10.0,6.0);
RockJoint["cohnpt2"] = 0.3494*pow(10.0,6.0);
RockJoint["plasstrpt1"] = 0.1;
RockJoint["plasstrpt2"] = 0.5;
RockJoint["frictionangle"] = 51.48;

# RockLayered = {};
# RockLayered["speedsound"] = 1496.326739;
# RockLayered["density"] = 2650;
# RockLayered["youngmodulus"] = 8.9*pow(10.0,9.0);
# RockLayered["poissonratio"] = 0.25;
# RockLayered["shearmodulus"] = 3.560000E+09;#1.363636E+10;#*pow(10.0,9.0);
# RockLayered["bulkmodulus"] = 5.933333E+09; #1.250000E+10;#20.83*pow(10.0,9.0);
# RockLayered["yieldtensilestrength"] = 16.52*pow(10.0,6.0);
# RockLayered["kdamage"] = 8.3261E+29;#1.59*pow(10.0,38.0);
# RockLayered["mdamage"] = 8;
# RockLayered["cohesion"] = 1.40E+07;#34.94*pow(10.0,6.0);
# RockLayered["cohnpt1"] = 1.40E+06;
# RockLayered["cohnpt2"] = 1.40E+05
# RockLayered["plasstrpt1"] = 0.1;
# RockLayered["plasstrpt2"] = 0.5;
# RockLayered["frictionangle"] = 36.0;#51.48;
# 
# Calcite = {}
# Calcite["speedsound"] = 4605.165271;
# Calcite["density"] = 2500;
# Calcite["youngmodulus"] = 84.3*pow(10.0,9.0);
# Calcite["poissonratio"] = 0.25;
# Calcite["shearmodulus"] = 3.372000E+10;#1.363636E+10;#*pow(10.0,9.0);
# Calcite["bulkmodulus"] = 5.620000E+10; #1.250000E+10;#20.83*pow(10.0,9.0);
# Calcite["yieldtensilestrength"] = 16.52*pow(10.0,6.0);
# Calcite["kdamage"] = 1.26345E+40;#1.59*pow(10.0,38.0);
# Calcite["mdamage"] = 8;
# Calcite["cohesion"] = 7E+06;#34.94*pow(10.0,6.0);
# Calcite["cohnpt1"] = 8E+05;
# Calcite["cohnpt2"] = 7E+05
# Calcite["plasstrpt1"] = 0.1;
# Calcite["plasstrpt2"] = 0.5;
# Calcite["frictionangle"] = 36;#51.48;

# Sandstone = {};
# Sandstone["speedsound"] =  2067.245576;#2.10818500136966e+003;
# Sandstone["density"] = 2600;
# Sandstone["youngmodulus"] = 2.00E+10;
# Sandstone["poissonratio"] = 0.2;
# Sandstone["shearmodulus"] = 8.333333E+09;
# Sandstone["bulkmodulus"] = 1.111111E+10;
# Sandstone["yieldtensilestrength"] = 3.2*pow(10.0,6.0);
# Sandstone["kdamage"] = 4.21598E+30;#4.61059E+27;
# Sandstone["mdamage"] = 8.0;
# Sandstone["cohesion"] = 2.44949E+07;#45e6;
# Sandstone["cohnpt1"] = 4e6;
# Sandstone["cohnpt2"] = 24e5;
# Sandstone["plasstrpt1"] = 0.1;
# Sandstone["plasstrpt2"] = 0.5;
# Sandstone["frictionangle"] = 45.6;
# 
# softrock = {};
# softrock["speedsound"] = 1932.183566; #2.41522980273099e+003;
# softrock["density"] = 2500;
# softrock["youngmodulus"] = 14e9;
# softrock["poissonratio"] = 0.25;#0.3
# softrock["shearmodulus"] = 5.600000E+09; #5.384615E+09;
# softrock["bulkmodulus"] = 9.333333E+09; #1.166667E+10;
# softrock["yieldtensilestrength"] = 3.2*pow(10.0,6.0);
# softrock["kdamage"] = 2.68135E+30;#1.57e27;
# softrock["mdamage"] = 8.0;
# softrock["cohesion"] = 1.95959E+07; #35e6;
# softrock["cohnpt1"] = 3e6;
# softrock["cohnpt2"] = 2e5;
# softrock["plasstrpt1"] = 0.1;
# softrock["plasstrpt2"] = 0.5;
# softrock["frictionangle"] = 45.6;
# Particle Packing Dummy Material
dummy = {};
dummy["speedsound"] = 1.0;
dummy["density"] = 1.0;
dummy["youngmodulus"] = 1.0;
dummy["poissonratio"] = 1.0;
dummy["shearmodulus"] = 1.0;
dummy["bulkmodulus"] = 1.0;
dummy["yieldtensilestrength"] = 1.0;
dummy["kdamage"] = 1.0;
dummy["mdamage"] = 1.0;
dummy["cohesion"] = 1.0;
dummy["cohnpt1"] = 1.0;
dummy["cohnpt2"] = 1.0;
dummy["plasstrpt1"] = 1.0;
dummy["plasstrpt2"] = 1.0;
dummy["frictionangle"] = 1.0;
# END OF MATERIAL LIBRARY


def SetGeometricParameters(model,L,r,smoothingKernelFunc=1):
    smoothingLength = 1.3*r;
    
    if smoothingKernelFunc != 3:
        Kappa = 2.0;
    else:
        Kappa = 3.0;

    KappaH = smoothingLength*Kappa;
    
    if L[0]==0:
            L[0] = KappaH;
    if L[1]==0:
            L[1] = KappaH;
    if L[2]==0:
            L[2] = KappaH;

    model.SetParameter("Lx","%e" % L[0]);
    model.SetParameter("Ly","%e" % L[1]);
    model.SetParameter("Lz","%e" % L[2]);
    model.SetParameter("GridSizeX","%d" % math.floor(L[0]/KappaH));
    model.SetParameter("GridSizeY","%d" % math.floor(L[1]/KappaH));
    model.SetParameter("GridSizeZ","%d" % math.floor(L[2]/KappaH));
    print("InitialSeparation = "+str(r));
    print("SmoothingLength = "+str(smoothingLength));
    print("KappaH = "+str(KappaH));
    print("Lx = "+str(L[0]));
    print("Ly = "+str(L[1]));
    print("Lz = "+str(L[2]));
    print("Gx = "+str(math.floor(L[0]/KappaH)));
    print("Gy = "+str(math.floor(L[1]/KappaH)));
    print("Gz = "+str(math.floor(L[2]/KappaH)));
    model.SetParameter("KappaH","%e" % KappaH);
    model.SetParameter("SmoothingLength","%e" % (1.3*r));
    model.SetParameter("InitialParticleSeparation","%e" % (r));

def SetGeometricPackingParameters(model,L,r,smoothingKernelFunc=3):
    smoothingLength = 1.3*r*2;
    
    if smoothingKernelFunc != 3:
        Kappa = 2.0;
    else:
        Kappa = 3.0;

    KappaH = smoothingLength*Kappa;
    
    if L[0]==0:
            L[0] = KappaH;
    if L[1]==0:
            L[1] = KappaH;
    if L[2]==0:
            L[2] = KappaH;

    model.SetParameter("Lx","%e" % L[0]);
    model.SetParameter("Ly","%e" % L[1]);
    model.SetParameter("Lz","%e" % L[2]);
    model.SetParameter("GridSizeX","%d" % math.floor(L[0]/KappaH));
    model.SetParameter("GridSizeY","%d" % math.floor(L[1]/KappaH));
    model.SetParameter("GridSizeZ","%d" % math.floor(L[2]/KappaH));
    print("InitialSeparation = "+str(r));
    print("PackingSmoothingLength = "+str(smoothingLength));
    print("SmoothingLength = "+str(1.3*r));
    print("KappaH = "+str(KappaH));
    print("Lx = "+str(L[0]));
    print("Ly = "+str(L[1]));
    print("Lz = "+str(L[2]));
    print("Gx = "+str(math.floor(L[0]/KappaH)));
    print("Gy = "+str(math.floor(L[1]/KappaH)));
    print("Gz = "+str(math.floor(L[2]/KappaH)));
    model.SetParameter("KappaH","%e" % KappaH);
    model.SetParameter("SmoothingLength","%e" % (1.3*r));
    model.SetParameter("InitialParticleSeparation","%e" % (r));    

def SetDamageParameters(model,mass,material):
    speedsound = material["speedsound"];
    density = material["density"];
    youngmodulus = material["youngmodulus"];
    poissonratio = material["poissonratio"];
    shearmodulus = material["shearmodulus"];
    bulkmodulus = material["bulkmodulus"];
    cohesion = material["cohesion"];
    frictionangle = (math.pi / 180.0)*material["frictionangle"];
    cg = 0.4*speedsound;
    tensilestrength =  (2.0 * cohesion * math.cos(frictionangle)) / (1 + math.sin(frictionangle)); 
    b = 0.25;
    m = 3.0* ((1.0/b) -1.0);
    t1 = ((m+1.0)*(m+2.0)) / (8.0 * (22.0/7.0) * cg*cg*cg);
    t2 = math.pow((m+3.0)/(m+4.0),m+4.0);
    temp = math.pow((bulkmodulus + (4.0/3.0)*shearmodulus)/tensilestrength,m) * (density)/(mass*t1*t2);
    rate = math.log10(math.pow(temp,(1/(m+3.0)))*(tensilestrength/bulkmodulus));
    A = tensilestrength / math.pow(10.0,rate);
    t3 = math.pow(bulkmodulus/A,(m+3));
    k = t1*t2*t3;
    print('k %15e' % k);
    print('m %15e' % m);
    model.SetParameter("KDamage","%e" % (k));
    model.SetParameter("MDamage","%e" % (m));

def SetDefaultParameters(model,L,r, material,smoothingKernelFunc=3):

    speedsound = material["speedsound"];
    density = material["density"];
    youngmodulus = material["youngmodulus"];
    poissonratio = material["poissonratio"];
    shearmodulus = material["shearmodulus"];
    bulkmodulus = material["bulkmodulus"];
    yieldtensilestrength = material["yieldtensilestrength"];
    kdamage = material["kdamage"];
    mdamage = material["mdamage"];
    cohesion = material["cohesion"];
    cohnpt1 = material["cohnpt1"];
    cohnpt2 = material["cohnpt2"];
    plasstrpt1 = material["plasstrpt1"];
    plasstrpt2 = material["plasstrpt2"];
    frictionangle = material["frictionangle"];

    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);

    if L[2]==0:
            dim = 2;
    else:
            dim = 3;            

    SetGeometricParameters(model,L,r,smoothingKernelFunc);
    model.SetParameter("ParticlesPerCell","100");
    model.SetParameter("MaxSteps","10000");
    model.SetParameter("Mass","1");
    model.SetParameter("Epsilon","0.5");
    model.SetParameter("ViscEtq","0.1");
    model.SetParameter("ViscAlpha","1.0");
    model.SetParameter("ViscBeta","2.0");
    model.SetParameter("DTime","%e" % (0.4*((1.3*r)/speedsound)));
    model.SetParameter("SpeedSound","%e" % speedsound);
    model.SetParameter("InitialDensity","%e" % density);
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    model.SetParameter("Dim","%d" % dim);
    model.SetParameter("AlgorithmSPH","2");
    model.SetParameter("BoundaryUpdateStep","1");
    model.SetParameter("isBoundaryDensityLowLimit","false");
    model.SetParameter("IsExternalForce","false");
    model.SetParameter("IsAverageVelocity","true");
    model.SetParameter("IsVisc","false");
    model.SetParameter("IsViscArtificial","false");
    model.SetParameter("IsNoSlip","false");
    model.SetParameter("IsSurfaceTension","false");
    model.SetParameter("IsDeltaSPH","false");
    model.SetParameter("delta","0.1");
    model.SetParameter("GravityX","0.0");
    model.SetParameter("GravityY","0.0");
    model.SetParameter("GravityZ","0.0");
    model.SetParameter("IsPeriodicBoundaryX","false");
    model.SetParameter("IsPeriodicBoundaryY","false");
    model.SetParameter("IsPeriodicBoundaryZ","false");
    model.SetParameter("IsLaminarVisc","false");
    model.SetParameter("IsSpsVisc","false");
    model.SetParameter("EOS","2");
    model.SetParameter("MonaghanB","");
    model.SetParameter("MonaghanGamma","");
    model.SetParameter("DensityFunction","");
    model.SetParameter("IsRepulsiveForceBC","false");
    model.SetParameter("IsShepard","false");
    model.SetParameter("ShepardStep","");
    model.SetParameter("Viscosity","");
    model.SetParameter("MovingBoundaryAmplitudeX","");
    model.SetParameter("MovingBoundaryAmplitudeY","");
    model.SetParameter("MovingBoundaryAmplitudeZ","");
    model.SetParameter("MovingBoundaryFrequencyX","");
    model.SetParameter("MovingBoundaryFrequencyY","");
    model.SetParameter("MovingBoundaryFrequencyZ","");
    model.SetParameter("MovingBoundaryPhaseX","");
    model.SetParameter("MovingBoundaryPhaseY","");
    model.SetParameter("MovingBoundaryPhaseZ","");
    model.SetParameter("MovingBoundaryShiftX","");
    model.SetParameter("MovingBoundaryShiftY","");
    model.SetParameter("MovingBoundaryShiftZ","");
    model.SetParameter("ShearModulus","%e" % shearmodulus);
    model.SetParameter("BulkModulus","%e" % bulkmodulus);
    model.SetParameter("PoissonRatio","");
    model.SetParameter("YoungModulus","");
    model.SetParameter("deltaRmat","%e" % (1e-12 * 1.667e-05));
    model.SetParameter("yieldTensileStrength","");
    model.SetParameter("KDamage","");
    model.SetParameter("MDamage","");
    model.SetParameter("IsSolids","true");
    model.SetParameter("IsDamage","false");
    model.SetParameter("IsPlasticityCorr","false");
    model.SetParameter("IsTensileInstCorr","false");
    model.SetParameter("IsFlags","false");
    model.SetParameter("IsReverseMoving","false");
    model.SetParameter("IsDensityBound","false");
    model.SetParameter("IsAssociatedFlowRule","false");
    model.SetParameter("IsDPbased","false");
    model.SetParameter("IsDamping","true");
    model.SetParameter("IsAlternateViscArtificial","false");
    model.SetParameter("ViscAlphamin","1.0");
    model.SetParameter("ViscAlphamax","2.5");
    model.SetParameter("IsContactForce","false");
    model.SetParameter("IsForcedBoundaries","false");
    model.SetParameter("IsStressedBoundaries","false");
    model.SetParameter("IsPlaneStress","false");
    model.SetParameter("IsPlaneStrain","false");
    model.SetParameter("IsPlaneStrain2PlaneStress","false");
    model.SetParameter("IsElastoPlasticDamage","false");
    model.SetParameter("IsDruckerPragerPlasticity","false");
    model.SetParameter("DPcohesionSoftening","1");
    model.SetParameter("DPYieldsurface","1");
    model.SetParameter("IsDPApexCriterion","false");
    model.SetParameter("IsDPTensileCrackingCriterion","false");
    model.SetParameter("BoundaryNormalTolerance","0.3");
    model.SetParameter("RankineCriticalStress","");
    model.SetParameter("StVenantCriticalStrain","");
    model.SetParameter("Cohesion","");
    model.SetParameter("FrictionAngle","");
    model.SetParameter("DilatancyAngle","");
    model.SetParameter("YieldShearStrength","");
    model.SetParameter("YieldCompressiveStrength","");
    model.SetParameter("YieldBiaxialCompressiveStrength","");
    model.SetParameter("CohnPt1","");
    model.SetParameter("CohnPt2","");
    model.SetParameter("PlastStrainPt1","");
    model.SetParameter("PlastStrainPt2","");
    model.SetParameter("EpsilonRmat","0.1");
    model.SetParameter("FluidPrefix","fluid");
    model.SetParameter("BoundaryPrefix","boundary");
    model.SetParameter("SolidPrefix","solid");
    model.SetParameter("VisualizationExt",".vtp");
    model.SetParameter("VisualizationDir","./output");
    model.SetParameter("StepsPerSnapshot","1000");
    model.SetParameter("CurrentStep","0");
    model.SetParameter("StepsPerFrame","100");
    model.SetParameter("CheckpointPrefix","checkpoint");
    model.SetParameter("CheckpointExt",".vtp");
    model.SetParameter("CheckpointDir","./checkpoint");
    model.SetParameter("OutputFormat","binary");
    model.SetParameter("Cg","%e" % (0.4*speedsound));
    model.SetParameter("PlasticityModel","2");
    model.SetParameter("DamageModel","1");
    model.SetParameter("DampingCoef","0.05");
    model.SetParameter("IsImposedDisplacement","false");
    model.SetParameter("Impdx","");
    model.SetParameter("Impdy","");
    model.SetParameter("Impdz","");
    model.SetParameter("IsFloatingObjectRotation","false");
    model.SetParameter("FloatingObjectAppliedFx","false");
    model.SetParameter("FloatingObjectAppliedFy","false");
    model.SetParameter("FloatingObjectAppliedFz","false");
    model.SetParameter("FloatingObjectAppliedForceRampTime","1");
    model.SetParameter("IsFloatingObjectMotionX","false");
    model.SetParameter("IsFloatingObjectMotionY","false");
    model.SetParameter("IsFloatingObjectMotionZ","false");
    model.SetParameter("Movfx","");
    model.SetParameter("Movfy","");
    model.SetParameter("Movfz","");
    model.SetParameter("Movsxx","");
    model.SetParameter("Movsxy","");
    model.SetParameter("Movsyy","");
    model.SetParameter("Movsyz","");
    model.SetParameter("Movsxz","");
    model.SetParameter("Movszz","");
    model.SetParameter("BoundariesRampTime","1");
    model.SetParameter("Cracksxx","");
    model.SetParameter("Cracksxy","");
    model.SetParameter("Cracksyy","");
    model.SetParameter("Cracksyz","");
    model.SetParameter("Cracksxz","");
    model.SetParameter("Crackszz","");
    model.SetParameter("CrackLength","");
    model.SetParameter("CrackThickness","");
    model.SetParameter("CrackX","");
    model.SetParameter("CrackY","");
    model.SetParameter("CrackZ","");
    model.SetParameter("ReverseMovingX","false");
    model.SetParameter("ReverseMovingY","false");
    model.SetParameter("ReverseMovingZ","false");
    model.SetParameter("IsCrack","false");
    model.SetParameter("IsFloatingObject","false");
    model.SetParameter("IsBoundaryForce","false");
    model.SetParameter("BoundaryForceMinLimit","");
    model.SetParameter("BoundaryForceMaxLimit","");
    model.SetParameter("IntegrationScheme","1");
    model.SetParameter("VerletStep","40");
def SetParticlePackingParameters(model,L,r,material,smoothingKernelFunc=3):
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    speedsound = material["speedsound"];
    density = material["density"];
    youngmodulus = material["youngmodulus"];
    poissonratio = material["poissonratio"];
    shearmodulus = material["shearmodulus"];
    bulkmodulus = material["bulkmodulus"];
    if L[2]==0:
            dim = 2;
    else:
            dim = 3;            

    SetGeometricPackingParameters(model,L,r,smoothingKernelFunc);
    model.SetParameter("ParticlesPerCell","100");
    model.SetParameter("MaxSteps","10000");
    model.SetParameter("Mass","1");
    model.SetParameter("Epsilon","0.5");
    model.SetParameter("ViscEtq","0.1");
    model.SetParameter("ViscAlpha","1.0");
    model.SetParameter("ViscBeta","2.0");
    model.SetParameter("DTime","%e" % (0.4*((1.3*r)/speedsound)));
    model.SetParameter("SpeedSound","%e" % speedsound);
    model.SetParameter("InitialDensity","%e" % density);
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    model.SetParameter("Dim","%d" % dim);
    model.SetParameter("AlgorithmSPH","2");
    model.SetParameter("BoundaryUpdateStep","1");
    model.SetParameter("isBoundaryDensityLowLimit","false");
    model.SetParameter("IsExternalForce","false");
    model.SetParameter("IsAverageVelocity","true");
    model.SetParameter("IsVisc","false");
    model.SetParameter("IsViscArtificial","false");
    model.SetParameter("IsNoSlip","false");
    model.SetParameter("IsSurfaceTension","false");
    model.SetParameter("IsDeltaSPH","false");
    model.SetParameter("delta","0.1");
    model.SetParameter("GravityX","0.0");
    model.SetParameter("GravityY","0.0");
    model.SetParameter("GravityZ","0.0");
    model.SetParameter("IsPeriodicBoundaryX","false");
    model.SetParameter("IsPeriodicBoundaryY","false");
    model.SetParameter("IsPeriodicBoundaryZ","false");
    model.SetParameter("IsLaminarVisc","false");
    model.SetParameter("IsSpsVisc","false");
    model.SetParameter("EOS","2");
    model.SetParameter("MonaghanB","");
    model.SetParameter("MonaghanGamma","");
    model.SetParameter("DensityFunction","");
    model.SetParameter("IsRepulsiveForceBC","false");
    model.SetParameter("IsShepard","false");
    model.SetParameter("ShepardStep","");
    model.SetParameter("Viscosity","");
    model.SetParameter("MovingBoundaryAmplitudeX","");
    model.SetParameter("MovingBoundaryAmplitudeY","");
    model.SetParameter("MovingBoundaryAmplitudeZ","");
    model.SetParameter("MovingBoundaryFrequencyX","");
    model.SetParameter("MovingBoundaryFrequencyY","");
    model.SetParameter("MovingBoundaryFrequencyZ","");
    model.SetParameter("MovingBoundaryPhaseX","");
    model.SetParameter("MovingBoundaryPhaseY","");
    model.SetParameter("MovingBoundaryPhaseZ","");
    model.SetParameter("MovingBoundaryShiftX","");
    model.SetParameter("MovingBoundaryShiftY","");
    model.SetParameter("MovingBoundaryShiftZ","");
    model.SetParameter("ShearModulus","%e" % shearmodulus);
    model.SetParameter("BulkModulus","%e" % bulkmodulus);
    model.SetParameter("PoissonRatio","");
    model.SetParameter("YoungModulus","");
    model.SetParameter("deltaRmat","%e" % (1e-12 * 1.667e-05));
    model.SetParameter("yieldTensileStrength","");
    model.SetParameter("KDamage","");
    model.SetParameter("MDamage","");
    model.SetParameter("IsSolids","true");
    model.SetParameter("IsDamage","false");
    model.SetParameter("IsPlasticityCorr","false");
    model.SetParameter("IsTensileInstCorr","false");
    model.SetParameter("IsFlags","false");
    model.SetParameter("IsReverseMoving","false");
    model.SetParameter("IsDensityBound","false");
    model.SetParameter("IsAssociatedFlowRule","false");
    model.SetParameter("IsDPbased","false");
    model.SetParameter("IsDamping","true");
    model.SetParameter("IsAlternateViscArtificial","false");
    model.SetParameter("ViscAlphamin","1.0");
    model.SetParameter("ViscAlphamax","2.5");
    model.SetParameter("IsContactForce","false");
    model.SetParameter("IsForcedBoundaries","false");
    model.SetParameter("IsStressedBoundaries","false");
    model.SetParameter("IsPlaneStress","false");
    model.SetParameter("IsPlaneStrain","false");
    model.SetParameter("IsPlaneStrain2PlaneStress","false");
    model.SetParameter("IsElastoPlasticDamage","false");
    model.SetParameter("IsDruckerPragerPlasticity","false");
    model.SetParameter("DPcohesionSoftening","1");
    model.SetParameter("DPYieldsurface","1");
    model.SetParameter("IsDPApexCriterion","false");
    model.SetParameter("IsDPTensileCrackingCriterion","false");
    model.SetParameter("BoundaryNormalTolerance","0.3");
    model.SetParameter("RankineCriticalStress","");
    model.SetParameter("StVenantCriticalStrain","");
    model.SetParameter("Cohesion","");
    model.SetParameter("FrictionAngle","");
    model.SetParameter("DilatancyAngle","");
    model.SetParameter("YieldShearStrength","");
    model.SetParameter("YieldCompressiveStrength","");
    model.SetParameter("YieldBiaxialCompressiveStrength","");
    model.SetParameter("CohnPt1","");
    model.SetParameter("CohnPt2","");
    model.SetParameter("PlastStrainPt1","");
    model.SetParameter("PlastStrainPt2","");
    model.SetParameter("EpsilonRmat","0.1");
    model.SetParameter("FluidPrefix","fluid");
    model.SetParameter("BoundaryPrefix","boundary");
    model.SetParameter("SolidPrefix","solid");
    model.SetParameter("VisualizationExt",".vtp");
    model.SetParameter("VisualizationDir","./output");
    model.SetParameter("StepsPerSnapshot","1000");
    model.SetParameter("CurrentStep","0");
    model.SetParameter("StepsPerFrame","100");
    model.SetParameter("CheckpointPrefix","checkpoint");
    model.SetParameter("CheckpointExt",".vtp");
    model.SetParameter("CheckpointDir","./checkpoint");
    model.SetParameter("OutputFormat","binary");
    model.SetParameter("Cg","%e" % (0.4*speedsound));
    model.SetParameter("PlasticityModel","2");
    model.SetParameter("DamageModel","1");
    model.SetParameter("DampingCoef","0.5");
    model.SetParameter("InitialPressure","15000");
    model.SetParameter("ToleranceNormal","-1");
    model.SetParameter("ToleranceKineticEnergy","0.000001");
    model.SetParameter("IsImposedDisplacement","false");
    model.SetParameter("Impdx","");
    model.SetParameter("Impdy","");
    model.SetParameter("Impdz","");
    model.SetParameter("IsFloatingObjectRotation","false");
    model.SetParameter("FloatingObjectAppliedFx","false");
    model.SetParameter("FloatingObjectAppliedFy","false");
    model.SetParameter("FloatingObjectAppliedFz","false");
    model.SetParameter("FloatingObjectAppliedForceRampTime","1");
    model.SetParameter("IsFloatingObjectMotionX","false");
    model.SetParameter("IsFloatingObjectMotionY","false");
    model.SetParameter("IsFloatingObjectMotionZ","false");
    model.SetParameter("Movfx","");
    model.SetParameter("Movfy","");
    model.SetParameter("Movfz","");
    model.SetParameter("Movsxx","");
    model.SetParameter("Movsxy","");
    model.SetParameter("Movsyy","");
    model.SetParameter("Movsyz","");
    model.SetParameter("Movsxz","");
    model.SetParameter("Movszz","");
    model.SetParameter("BoundariesRampTime","1");
    model.SetParameter("Cracksxx","");
    model.SetParameter("Cracksxy","");
    model.SetParameter("Cracksyy","");
    model.SetParameter("Cracksyz","");
    model.SetParameter("Cracksxz","");
    model.SetParameter("Crackszz","");
    model.SetParameter("CrackLength","");
    model.SetParameter("CrackThickness","");
    model.SetParameter("CrackX","");
    model.SetParameter("CrackY","");
    model.SetParameter("CrackZ","");
    model.SetParameter("ReverseMovingX","false");
    model.SetParameter("ReverseMovingY","false");
    model.SetParameter("ReverseMovingZ","false");
    model.SetParameter("IsCrack","false");
    model.SetParameter("IsFloatingObject","false");
    model.SetParameter("IsBoundaryForce","false");
    model.SetParameter("BoundaryForceMinLimit","");
    model.SetParameter("BoundaryForceMaxLimit","");
    model.SetParameter("IntegrationScheme","1");
    model.SetParameter("VerletStep","40");
def SetBrazilianTestParameters(model,L,r,material,smoothingKernelFunc=3):
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    speedsound = material["speedsound"];
    density = material["density"];
    youngmodulus = material["youngmodulus"];
    poissonratio = material["poissonratio"];
    shearmodulus = material["shearmodulus"];
    bulkmodulus = material["bulkmodulus"];
    yieldtensilestrength = material["yieldtensilestrength"];
    kdamage = material["kdamage"];
    mdamage = material["mdamage"];
    cohesion = material["cohesion"];
    cohnpt1 = material["cohnpt1"];
    cohnpt2 = material["cohnpt2"];
    plasstrpt1 = material["plasstrpt1"];
    plasstrpt2 = material["plasstrpt2"];
    frictionangle = material["frictionangle"];
    if L[2]==0:
        dim = 2;
    else:
        dim = 3;            
                    
    SetGeometricParameters(model,L,r,smoothingKernelFunc);
    model.SetParameter("ParticlesPerCell","100");
    model.SetParameter("MaxSteps","40000");
    model.SetParameter("Mass","1");
    model.SetParameter("Epsilon","0.5");
    model.SetParameter("ViscEtq","0.1");
    model.SetParameter("ViscAlpha","1.0");
    model.SetParameter("ViscBeta","2.0");
    model.SetParameter("DTime","%e" % (0.4*((1.3*r)/speedsound)));
    model.SetParameter("SpeedSound","%e" % speedsound);
    model.SetParameter("InitialDensity","%e" % density);
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    model.SetParameter("Dim","%d" % dim);
    model.SetParameter("AlgorithmSPH","2");
    model.SetParameter("BoundaryUpdateStep","1");
    model.SetParameter("isBoundaryDensityLowLimit","false");
    model.SetParameter("IsExternalForce","false");
    model.SetParameter("IsAverageVelocity","true");
    model.SetParameter("IsVisc","false");
    model.SetParameter("Visc","false");
    model.SetParameter("IsViscArtificial","true");
    model.SetParameter("IsNoSlip","false");
    model.SetParameter("IsSurfaceTension","false");
    model.SetParameter("IsDeltaSPH","false");
    model.SetParameter("delta","0.1");
    model.SetParameter("GravityX","0.0");
    model.SetParameter("GravityY","0.0");
    model.SetParameter("GravityZ","0.0");
    model.SetParameter("IsPeriodicBoundaryX","false");
    model.SetParameter("IsPeriodicBoundaryY","false");
    model.SetParameter("IsPeriodicBoundaryZ","false");
    model.SetParameter("IsLaminarVisc","false");
    model.SetParameter("IsSpsVisc","false");
    model.SetParameter("EOS","1");
    model.SetParameter("MonaghanB","");
    model.SetParameter("MonaghanGamma","");
    model.SetParameter("DensityFunction","");
    model.SetParameter("IsRepulsiveForceBC","false");
    model.SetParameter("IsShepard","false");
    model.SetParameter("ShepardStep","");
    model.SetParameter("Viscosity","");
    model.SetParameter("MovingBoundaryAmplitudeX","");
    model.SetParameter("MovingBoundaryAmplitudeY","");
    model.SetParameter("MovingBoundaryAmplitudeZ","");
    model.SetParameter("MovingBoundaryFrequencyX","");
    model.SetParameter("MovingBoundaryFrequencyY","");
    model.SetParameter("MovingBoundaryFrequencyZ","");
    model.SetParameter("MovingBoundaryPhaseX","");
    model.SetParameter("MovingBoundaryPhaseY","");
    model.SetParameter("MovingBoundaryPhaseZ","");
    model.SetParameter("MovingBoundaryShiftX","");
    model.SetParameter("MovingBoundaryShiftY","");
    model.SetParameter("MovingBoundaryShiftZ","");
    model.SetParameter("ShearModulus","%e" % shearmodulus);
    model.SetParameter("BulkModulus","%e" % bulkmodulus);
    model.SetParameter("PoissonRatio","%e" % poissonratio);
    model.SetParameter("YoungModulus","%e" % youngmodulus);
    model.SetParameter("deltaRmat","%e" % (1e-12 * 1.667e-05));
    model.SetParameter("yieldTensileStrength","%e" % yieldtensilestrength);
    model.SetParameter("KDamage","%e" % kdamage);
    model.SetParameter("MDamage","%e" % mdamage);
    model.SetParameter("IsSolids","true");
    model.SetParameter("IsDamage","false");
    model.SetParameter("IsPlasticityCorr","false");
    model.SetParameter("IsTensileInstCorr","true");
    model.SetParameter("IsFlags","false");
    model.SetParameter("IsReverseMoving","true");
    model.SetParameter("IsDensityBound","false");
    model.SetParameter("IsAssociatedFlowRule","true");
    model.SetParameter("IsDPbased","true");
    model.SetParameter("IsDamping","false");
    model.SetParameter("IsAlternateViscArtificial","true");
    model.SetParameter("ViscAlphamin","1.0");
    model.SetParameter("ViscAlphamax","2.5");
    model.SetParameter("IsContactForce","false");
    model.SetParameter("IsForcedBoundaries","false");
    model.SetParameter("IsStressedBoundaries","false");
    model.SetParameter("IsPlaneStress","false");
    model.SetParameter("IsPlaneStrain","true");
    model.SetParameter("IsPlaneStrain2PlaneStress","true");
    model.SetParameter("IsElastoPlasticDamage","true");
    model.SetParameter("IsDruckerPragerPlasticity","true");
    model.SetParameter("DPcohesionSoftening","1");
    model.SetParameter("DPYieldsurface","1");
    model.SetParameter("IsDPApexCriterion","true");
    model.SetParameter("IsDPTensileCrackingCriterion","false");
    model.SetParameter("BoundaryNormalTolerance","0.02");
    model.SetParameter("DensityTolerance","0.3");
    model.SetParameter("RankineCriticalStress","");
    model.SetParameter("StVenantCriticalStrain","");
    model.SetParameter("Cohesion","%e" % cohesion);
    model.SetParameter("FrictionAngle","%e" % frictionangle);
    model.SetParameter("DilatancyAngle","%e" % (frictionangle/10.0));
    model.SetParameter("YieldShearStrength","");
    model.SetParameter("YieldCompressiveStrength","");
    model.SetParameter("YieldBiaxialCompressiveStrength","");
    model.SetParameter("CohnPt1","%e" % cohnpt1);
    model.SetParameter("CohnPt2","%e" % cohnpt2);
    model.SetParameter("PlastStrainPt1","%e" % plasstrpt1);
    model.SetParameter("PlastStrainPt2","%e" % plasstrpt2);
    model.SetParameter("EpsilonRmat","0.1");
    model.SetParameter("FluidPrefix","fluid");
    model.SetParameter("BoundaryPrefix","boundary");
    model.SetParameter("SolidPrefix","solid");
    model.SetParameter("VisualizationExt",".vtp");
    model.SetParameter("VisualizationDir","./output");
    model.SetParameter("StepsPerSnapshot","1000");
    model.SetParameter("CurrentStep","0");
    model.SetParameter("StepsPerFrame","100");
    model.SetParameter("CheckpointPrefix","checkpoint");
    model.SetParameter("CheckpointExt",".vtp");
    model.SetParameter("CheckpointDir","./checkpoint");
    model.SetParameter("OutputFormat","binary");
    model.SetParameter("Cg","%e" % (0.4*speedsound));
    model.SetParameter("PlasticityModel","2");
    model.SetParameter("DamageModel","1");
    model.SetParameter("DampingCoef","0.02");
    model.SetParameter("IsImposedDisplacement","false");
    model.SetParameter("Impdx","");
    model.SetParameter("Impdy","");
    model.SetParameter("Impdz","");
    model.SetParameter("IsFloatingObjectRotation","true");
    model.SetParameter("FloatingObjectAppliedFx","0");
    model.SetParameter("FloatingObjectAppliedFy","0");
    model.SetParameter("FloatingObjectAppliedFz","0");
    model.SetParameter("FloatingObjectVelocity","0.0000000000 0.0000000000 0.0000000000");
    model.SetParameter("FloatingObjectCenterOfMass","0.0000000000 0.0000000000 0.0000000000");
    model.SetParameter("FloatingObjectAppliedForceRampTime","1");
    model.SetParameter("FloatingObjectRotationMatrix","1.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0");
    model.SetParameter("FloatingObjectMomentOfInertia","0.0000000000 0.0 0.0 0.0 0.0000000000 0.0 0.0 0.0 0.0000000000");
    model.SetParameter("FloatingObjectRotationMatrix","0.0 0.0 0.0");
    model.SetParameter("FloatingObjectAngularVelocity","0.0 0.0 0.0");
    model.SetParameter("IsFloatingObjectMotionX","true");
    model.SetParameter("IsFloatingObjectMotionY","true");
    model.SetParameter("IsFloatingObjectMotionZ","true");
    model.SetParameter("FloatingObjectMass","0");
    model.SetParameter("Movfx","0");
    model.SetParameter("Movfy","0");
    model.SetParameter("Movfz","0");
    model.SetParameter("Movsxx","0");
    model.SetParameter("Movsxy","0");
    model.SetParameter("Movsyy","0");
    model.SetParameter("Movsyz","0");
    model.SetParameter("Movsxz","0");
    model.SetParameter("Movszz","0");
    model.SetParameter("BoundariesRampTime","0");
    model.SetParameter("Cracksxx","0");
    model.SetParameter("Cracksxy","0");
    model.SetParameter("Cracksyy","0");
    model.SetParameter("Cracksyz","0");
    model.SetParameter("Cracksxz","0");
    model.SetParameter("Crackszz","0");
    model.SetParameter("CrackLength","0.2");
    model.SetParameter("CrackThickness","0.01");
    model.SetParameter("CrackX","2.6");
    model.SetParameter("CrackY","2.6");
    model.SetParameter("CrackZ","2.6");
    model.SetParameter("ReverseMovingX","false");
    model.SetParameter("ReverseMovingY","true");
    model.SetParameter("ReverseMovingZ","false");
    model.SetParameter("IsCrack","false");
    model.SetParameter("IsFloatingObject","false");
    model.SetParameter("IsBoundaryForce","false");
    model.SetParameter("BoundaryForceMinLimit","");
    model.SetParameter("BoundaryForceMaxLimit","");
    model.SetParameter("IntegrationScheme","1");
    model.SetParameter("VerletStep","40");

def SetJointParameters(model,L,r,material,smoothingKernelFunc=1):
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    speedsound = material["speedsound"];
    density = material["density"];
    youngmodulus = material["youngmodulus"];
    poissonratio = material["poissonratio"];
    shearmodulus = material["shearmodulus"];
    bulkmodulus = material["bulkmodulus"];
    yieldtensilestrength = material["yieldtensilestrength"];
    kdamage = material["kdamage"];
    mdamage = material["mdamage"];
    cohesion = material["cohesion"];
    cohnpt1 = material["cohnpt1"];
    cohnpt2 = material["cohnpt2"];
    plasstrpt1 = material["plasstrpt1"];
    plasstrpt2 = material["plasstrpt2"];
    frictionangle = material["frictionangle"];
    if L[2]==0:
        dim = 2;
    else:
        dim = 3;            
                    
    SetGeometricParameters(model,L,r,smoothingKernelFunc);
    model.SetParameter("ParticlesPerCell","100");
    model.SetParameter("MaxSteps","40000");
    model.SetParameter("Epsilon","0.5");
    model.SetParameter("ViscEtq","0.1");
    model.SetParameter("ViscAlpha","2.5");
    model.SetParameter("ViscBeta","5.0");
    model.SetParameter("DTime","%e" % (0.2*((1.3*r)/speedsound)));
    model.SetParameter("SpeedSound","%e" % speedsound);
    model.SetParameter("InitialDensity","%e" % density);
    model.SetParameter("DensityRateAlgorithm","2");
    model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
    model.SetParameter("Dim","%d" % dim);
    model.SetParameter("AlgorithmSPH","2");
    model.SetParameter("BoundaryUpdateStep","1");
    model.SetParameter("isBoundaryDensityLowLimit","false");
    model.SetParameter("IsExternalForce","false");
    model.SetParameter("IsAverageVelocity","true");
    model.SetParameter("isAlternateAverageVelocity","true");
    model.SetParameter("IsVisc","false");
    model.SetParameter("Visc","false");
    model.SetParameter("IsViscArtificial","true");
    model.SetParameter("IsNoSlip","false");
    model.SetParameter("IsSurfaceTension","false");
    model.SetParameter("IsDeltaSPH","false");
    model.SetParameter("delta","0.1");
    model.SetParameter("GravityX","0.0");
    model.SetParameter("GravityY","0.0");
    model.SetParameter("GravityZ","0.0");
    model.SetParameter("IsPeriodicBoundaryX","false");
    model.SetParameter("IsPeriodicBoundaryY","false");
    model.SetParameter("IsPeriodicBoundaryZ","false");
    model.SetParameter("IsLaminarVisc","false");
    model.SetParameter("IsSpsVisc","false");
    model.SetParameter("EOS","1");
    model.SetParameter("MonaghanB","");
    model.SetParameter("MonaghanGamma","");
    model.SetParameter("DensityFunction","");
    model.SetParameter("IsRepulsiveForceBC","false");
    model.SetParameter("IsShepard","false");
    model.SetParameter("ShepardStep","");
    model.SetParameter("Viscosity","");
    model.SetParameter("MovingBoundaryAmplitudeX","");
    model.SetParameter("MovingBoundaryAmplitudeY","");
    model.SetParameter("MovingBoundaryAmplitudeZ","");
    model.SetParameter("MovingBoundaryFrequencyX","");
    model.SetParameter("MovingBoundaryFrequencyY","");
    model.SetParameter("MovingBoundaryFrequencyZ","");
    model.SetParameter("MovingBoundaryPhaseX","");
    model.SetParameter("MovingBoundaryPhaseY","");
    model.SetParameter("MovingBoundaryPhaseZ","");
    model.SetParameter("MovingBoundaryShiftX","");
    model.SetParameter("MovingBoundaryShiftY","");
    model.SetParameter("MovingBoundaryShiftZ","");
    model.SetParameter("ShearModulus","%e" % shearmodulus);
    model.SetParameter("BulkModulus","%e" % bulkmodulus);
    model.SetParameter("PoissonRatio","%e" % poissonratio);
    model.SetParameter("YoungModulus","%e" % youngmodulus);
    model.SetParameter("deltaRmat","%e" % (1e-12 * 1.667e-05));
    model.SetParameter("yieldTensileStrength","%e" % yieldtensilestrength);
    model.SetParameter("KDamage","%e" % kdamage);
    model.SetParameter("MDamage","%e" % mdamage);
    model.SetParameter("IsSolids","true");
    model.SetParameter("IsDamage","false");
    model.SetParameter("IsPlasticityCorr","false");
    model.SetParameter("IsTensileInstCorr","true");
    model.SetParameter("IsFlags","false");
    model.SetParameter("IsReverseMoving","true");
    model.SetParameter("IsDensityBound","false");
    model.SetParameter("IsAssociatedFlowRule","true");
    model.SetParameter("IsDPbased","true");
    model.SetParameter("IsDamping","false");
    model.SetParameter("IsAlternateViscArtificial","false");
    model.SetParameter("ViscAlphamin","1.0");
    model.SetParameter("ViscAlphamax","2.5");
    model.SetParameter("IsContactForce","false");
    model.SetParameter("IsForcedBoundaries","false");
    model.SetParameter("IsStressedBoundaries","false");
    model.SetParameter("IsPlaneStress","false");
    model.SetParameter("IsPlaneStrain","true");
    model.SetParameter("IsPlaneStrain2PlaneStress","true");
    model.SetParameter("IsElastoPlasticDamage","false");
    model.SetParameter("IsDruckerPragerPlasticity","true");
    model.SetParameter("DPcohesionSoftening","1");
    model.SetParameter("DPYieldsurface","1");
    model.SetParameter("IsDPApexCriterion","true");
    model.SetParameter("IsDPTensileCrackingCriterion","false");
    model.SetParameter("BoundaryNormalTolerance","0.02");
    model.SetParameter("DensityTolerance","0.3");
    model.SetParameter("RankineCriticalStress","");
    model.SetParameter("StVenantCriticalStrain","");
    model.SetParameter("Cohesion","%e" % cohesion);
    model.SetParameter("FrictionAngle","%e" % frictionangle);
    model.SetParameter("DilatancyAngle","%e" % (frictionangle/10.0));
    model.SetParameter("YieldShearStrength","");
    model.SetParameter("YieldCompressiveStrength","");
    model.SetParameter("YieldBiaxialCompressiveStrength","");
    model.SetParameter("CohnPt1","%e" % cohnpt1);
    model.SetParameter("CohnPt2","%e" % cohnpt2);
    model.SetParameter("PlastStrainPt1","%e" % plasstrpt1);
    model.SetParameter("PlastStrainPt2","%e" % plasstrpt2);
    model.SetParameter("EpsilonRmat","0.001");
    model.SetParameter("FluidPrefix","fluid");
    model.SetParameter("BoundaryPrefix","boundary");
    model.SetParameter("SolidPrefix","solid");
    model.SetParameter("VisualizationExt",".vtp");
    model.SetParameter("VisualizationDir","./output");
    model.SetParameter("StepsPerSnapshot","200");
    model.SetParameter("CurrentStep","0");
    model.SetParameter("StepsPerFrame","200");
    model.SetParameter("CheckpointPrefix","checkpoint");
    model.SetParameter("CheckpointExt",".vtp");
    model.SetParameter("CheckpointDir","./checkpoint");
    model.SetParameter("OutputFormat","binary");
    model.SetParameter("Cg","%e" % (0.4*speedsound));
    model.SetParameter("PlasticityModel","2");
    model.SetParameter("DamageModel","1");
    model.SetParameter("DampingCoef","0.02");
    model.SetParameter("IsImposedDisplacement","false");
    model.SetParameter("Impdx","");
    model.SetParameter("Impdy","");
    model.SetParameter("Impdz","");
    model.SetParameter("IsFloatingObjectRotation","false");
    model.SetParameter("FloatingObjectAppliedFx","0");
    model.SetParameter("FloatingObjectAppliedFy","0");
    model.SetParameter("FloatingObjectAppliedFz","0");
    model.SetParameter("FloatingObjectVelocity","0.0000000000 0.0000000000 0.0000000000");
    model.SetParameter("FloatingObjectCenterOfMass","0.0000000000 0.0000000000 0.0000000000");
    model.SetParameter("FloatingObjectAppliedForceRampTime","1");
    model.SetParameter("FloatingObjectRotationMatrix","1.0 0.0 0.0 0.0 1.0 0.0 0.0 0.0 1.0");
    model.SetParameter("FloatingObjectMomentOfInertia","0.0000000000 0.0 0.0 0.0 0.0000000000 0.0 0.0 0.0 0.0000000000");
    model.SetParameter("FloatingObjectRotationMatrix","0.0 0.0 0.0");
    model.SetParameter("FloatingObjectAngularVelocity","0.0 0.0 0.0");
    model.SetParameter("IsFloatingObjectMotionX","false");
    model.SetParameter("IsFloatingObjectMotionY","false");
    model.SetParameter("IsFloatingObjectMotionZ","false");
    model.SetParameter("FloatingObjectMass","0");
    model.SetParameter("Movfx","0");
    model.SetParameter("Movfy","0");
    model.SetParameter("Movfz","0");
    model.SetParameter("Movsxx","0");
    model.SetParameter("Movsxy","0");
    model.SetParameter("Movsyy","0");
    model.SetParameter("Movsyz","0");
    model.SetParameter("Movsxz","0");
    model.SetParameter("Movszz","0");
    model.SetParameter("BoundariesRampTime","0");
    model.SetParameter("Cracksxx","0");
    model.SetParameter("Cracksxy","0");
    model.SetParameter("Cracksyy","0");
    model.SetParameter("Cracksyz","0");
    model.SetParameter("Cracksxz","0");
    model.SetParameter("Crackszz","0");
    model.SetParameter("CrackLength","0.2");
    model.SetParameter("CrackThickness","0.01");
    model.SetParameter("CrackX","2.6");
    model.SetParameter("CrackY","2.6");
    model.SetParameter("CrackZ","2.6");
    model.SetParameter("ReverseMovingX","false");
    model.SetParameter("ReverseMovingY","true");
    model.SetParameter("ReverseMovingZ","false");
    model.SetParameter("IsCrack","false");
    model.SetParameter("IsFloatingObject","false");
    model.SetParameter("IsBoundaryForce","false");
    model.SetParameter("BoundaryForceMinLimit","");
    model.SetParameter("BoundaryForceMaxLimit","");
    model.SetParameter("IntegrationScheme","1");
    model.SetParameter("VerletStep","40");                                         


def SetHydroFracturingParameters(model,L,r,smoothingKernelFunc=1):
    model.SetParameter("CurrentStep","0");
    model.SetParameter("DTime","9e-08");
    model.SetParameter("MaxSteps","1000000");
    model.SetParameter("Dim","2");
    model.SetParameter("ParticlesPerCell","30");
    model.SetParameter("SmoothingLength","0.00065522336662347889");
    model.SetParameter("InitialParticleSeparation","0.00050401797432575294");
    model.SetParameter("Lx","0.20049835018678455");
    model.SetParameter("Ly","0.11007752559274445");
    model.SetParameter("Lz","0.0013104467332469578");
    model.SetParameter("IntegrationScheme","1");
    model.SetParameter("VerletStep","40");
    model.SetParameter("AlgorithmSPH","2");
    model.SetParameter("DensityRateAlgorithm","3");
    model.SetParameter("PressureTermAlgorithm","2");
    model.SetParameter("SmoothingKernelFunc","1");
    model.SetParameter("DensityAlgorithm","1");
    model.SetParameter("IsMonaghanTensileCorrection","0");
    model.SetParameter("IsShepard","False");
    model.SetParameter("ShepardStep","30");
    model.SetParameter("IsAverageDensity","False");
    model.SetParameter("AverageDensityStep","30");
    model.SetParameter("AverageDensityCoeff","0.5");
    model.SetParameter("IsDeltaSPH","False");
    model.SetParameter("delta","0.10000000000000001");
    model.SetParameter("BoundaryUpdateStep","1");
    model.SetParameter("DensityTolerance","0.29999999999999999");
    model.SetParameter("LaminarViscModel","0");
    model.SetParameter("Viscosity","0 0.001");
    model.SetParameter("NoSlipModel","False");
    model.SetParameter("IsAverageVelocity","True");
    model.SetParameter("IsAlternateAverageVelocity","True");
    model.SetParameter("Epsilon","0.10000000000000001");
    model.SetParameter("IsRepulsiveForceBC","True");
    model.SetParameter("IsViscArtificial","True");
    model.SetParameter("ViscAlpha","0.10000000000000001");
    model.SetParameter("ViscBeta","0");
    model.SetParameter("ViscEtq","0.10000000000000001");
    model.SetParameter("IsSpsVisc","False");
    model.SetParameter("limitBoundaryDensity","True");
    model.SetParameter("GravityX","0");
    model.SetParameter("GravityY","0");
    model.SetParameter("GravityZ","0");
    model.SetParameter("IsPeriodicBoundaryX","False");
    model.SetParameter("IsPeriodicBoundaryY","False");
    model.SetParameter("IsPeriodicBoundaryZ","False");
    model.SetParameter("isMovingBoundary","False");
    model.SetParameter("MovingBoundaryAmplitudeX","0");
    model.SetParameter("MovingBoundaryFrequencyX","0");
    model.SetParameter("MovingBoundaryPhaseX","0");
    model.SetParameter("MovingBoundaryShiftX","2");
    model.SetParameter("MovingBoundaryAmplitudeY","0");
    model.SetParameter("MovingBoundaryFrequencyY","0");
    model.SetParameter("MovingBoundaryPhaseY","0");
    model.SetParameter("MovingBoundaryShiftY","0");
    model.SetParameter("MovingBoundaryAmplitudeZ","0");
    model.SetParameter("MovingBoundaryFrequencyZ","0");
    model.SetParameter("MovingBoundaryPhaseZ","0");
    model.SetParameter("MovingBoundaryShiftZ","0");
    model.SetParameter("isInflowX","0");
    model.SetParameter("isInflowY","0");
    model.SetParameter("isInflowZ","0");
    model.SetParameter("isOutflowX","0");
    model.SetParameter("isOutflowY","0");
    model.SetParameter("isOutflowZ","0");
    model.SetParameter("InitialVelocity","0");
    model.SetParameter("isFloatingObject","False");
    model.SetParameter("FloatingObjectMass","0");
    model.SetParameter("FloatingObjectMomentOfInertia","0 0 0 0 0 0 0 0 0");
    model.SetParameter("FloatingObjectCenterOfMass","0 0 0");
    model.SetParameter("FloatingObjectRotationMatrix","1 0 0 0 1 0 0 0 1");
    model.SetParameter("InitialDensity","1540 1000");
    model.SetParameter("EOS","1");
    model.SetParameter("SpeedSound","1466 1466");
    model.SetParameter("BackgroundPressure","101325");
    model.SetParameter("MonaghanB","307020000 307020000");
    model.SetParameter("MonaghanGamma","7 7");
    model.SetParameter("FluidPrefix","fluid");
    model.SetParameter("BoundaryPrefix","boundary");
    model.SetParameter("VisualizationExt",".vtp");
    model.SetParameter("VisualizationDir","./output");
    model.SetParameter("StepsPerFrame","1000");
    model.SetParameter("CheckpointPrefix","checkpoint");
    model.SetParameter("CheckpointExt",".vtp");
    model.SetParameter("StepsPerSnapshot","100000");
    model.SetParameter("CheckpointDir","./checkpoint");
    model.SetParameter("OutputFormat","binary");
    model.SetParameter("IsBoundaryForce","False");
    model.SetParameter("IsBoundaryForceCorrection","0");
    model.SetParameter("CylinderCenter","5 4 0");
    model.SetParameter("InterpolationFluidScheme","0");
    model.SetParameter("InterpolationSolidScheme","1");
    model.SetParameter("IsBoundaryPressureInterpolation","0");
    model.SetParameter("IsBoundaryDensityInterpolation","1");
    model.SetParameter("IsBoundaryVelocityInterpolation","1");
    model.SetParameter("IsBoundaryStressInterpolation","1");
    model.SetParameter("IsFSstressBd","0");
    model.SetParameter("IsFSdensityDummyBd","0");
    model.SetParameter("IsFSvelocitySlipBd","0");
    model.SetParameter("IsBoundary2Phases","1");
    model.SetParameter("IsSBfreeslip","2");
    model.SetParameter("InsituStressVertical","-1e6");
    model.SetParameter("InsituStressHorizontal","-2e6");
    model.SetParameter("IsCharacteristicJInterpolation","0");
    model.SetParameter("PoissonRatio","0.20000000000000001");
    model.SetParameter("YoungModulus","5960000000");
    model.SetParameter("YieldTensileStrength","3200000");
    model.SetParameter("KDamage","3.18e+36");
    model.SetParameter("MDamage","9");
    model.SetParameter("StVenantCriticalStrain","0.029999999999999999");
    model.SetParameter("Cohesion","5203840");
    model.SetParameter("FrictionAngle","55.818340999999997");
    model.SetParameter("CohnPt1","2601920");
    model.SetParameter("CohnPt2","0");
    model.SetParameter("PlastStrainPt1","0.050000000000000003");
    model.SetParameter("PlastStrainPt2","0.10000000000000001");
    model.SetParameter("IsSolids","true");
    model.SetParameter("IsDamage","false");
    model.SetParameter("IsPlasticityCorr","false");
    model.SetParameter("IsFlags","false");
    model.SetParameter("IsAssociatedFlowRule","true");
    model.SetParameter("IsDPbased","true");
    model.SetParameter("IsDamping","false");
    model.SetParameter("IsHydroDamping","false");
    model.SetParameter("IsPlaneStress","false");
    model.SetParameter("IsPlaneStrain","true");
    model.SetParameter("IsPlaneStrain2PlaneStress","false");
    model.SetParameter("IsElastoPlasticDamage","true");
    model.SetParameter("IsDruckerPragerPlasticity","true");
    model.SetParameter("DPcohesionSoftening","1");
    model.SetParameter("DPYieldsurface","1");
    model.SetParameter("IsDPApexCriterion","false");
    model.SetParameter("IsDPTensileCrackingCriterion","false");
    model.SetParameter("BoundaryNormalTolerance","0.02");
    model.SetParameter("PlasticityModel","2");
    model.SetParameter("DamageModel","1");
    model.SetParameter("DampingCoef","0.02");
    model.SetParameter("HydroDampingCoef","0.001");
    model.SetParameter("IsAlternateViscArtificial","false");
    model.SetParameter("ViscAlphamin","1");
    model.SetParameter("ViscAlphamax","2.5");
    model.SetParameter("IsTensileInstCorr","true");
    model.SetParameter("EpsilonRmat","0.10000000000000001");
    model.SetParameter("Cg","586.4");
    model.SetParameter("IsContactForce","false");
    model.SetParameter("IsForcedBoundaries","false");
    model.SetParameter("IsStressedBoundaries","false");
    model.SetParameter("IsReverseMoving","false");
    model.SetParameter("IsImposedDisplacement","false");
    model.SetParameter("ReverseMovingX","false");
    model.SetParameter("ReverseMovingY","false");
    model.SetParameter("ReverseMovingZ","false");
    model.SetParameter("Movfx","0");
    model.SetParameter("Movfy","0");
    model.SetParameter("Movfz","0");
    model.SetParameter("Movsxx","0");
    model.SetParameter("Movsxy","0");
    model.SetParameter("Movsyy","0");
    model.SetParameter("Movsyz","0");
    model.SetParameter("Movsxz","0");
    model.SetParameter("Movszz","0");
    model.SetParameter("BoundariesRampTime","1");
    model.SetParameter("IsCrack","false");
    model.SetParameter("Cracksxx","0");
    model.SetParameter("Cracksxy","0");
    model.SetParameter("Cracksyy","0");
    model.SetParameter("Cracksyz","0");
    model.SetParameter("Cracksxz","0");
    model.SetParameter("Crackszz","0");
    model.SetParameter("CrackLength","0.20000000000000001");
    model.SetParameter("CrackThickness","0.01");
    model.SetParameter("CrackX","2.6000000000000001");
    model.SetParameter("CrackY","2.6000000000000001");
    model.SetParameter("CrackZ","2.6000000000000001");
    model.SetParameter("IsFloatingObjectRotation","false");
    model.SetParameter("FloatingObjectAppliedFx","0");
    model.SetParameter("FloatingObjectAppliedFy","0");
    model.SetParameter("FloatingObjectAppliedFz","0");
    model.SetParameter("FloatingObjectAppliedForceRampTime","0");
    model.SetParameter("IsFloatingObjectMotionX","false");
    model.SetParameter("IsFloatingObjectMotionY","false");
    model.SetParameter("IsFloatingObjectMotionZ","false");
    model.SetParameter("KappaH","0.0013104467332469578");
    model.SetParameter("NumberOfPhases","2");
    model.SetParameter("Mass","0.00033681832187097428 0.00021871319602011316");
    model.SetParameter("GridSizeX","153");
    model.SetParameter("GridSizeY","84");
    model.SetParameter("GridSizeZ","1");
    SetGeometricParameters(model,L,r,smoothingKernelFunc=1);
    
# def SetMultiLayeredParameters(model,L,r,material,smoothingKernelFunc=1):
#     model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
#     speedsound = material["speedsound"];
#     density = material["density"];
#     youngmodulus = material["youngmodulus"];
#     poissonratio = material["poissonratio"];
#     shearmodulus = material["shearmodulus"];
#     bulkmodulus = material["bulkmodulus"];
#     yieldtensilestrength = material["yieldtensilestrength"];
#     kdamage = material["kdamage"];
#     mdamage = material["mdamage"];
#     cohesion = material["cohesion"];
#     cohnpt1 = material["cohnpt1"];
#     cohnpt2 = material["cohnpt2"];
#     plasstrpt1 = material["plasstrpt1"];
#     plasstrpt2 = material["plasstrpt2"];
#     frictionangle = material["frictionangle"];
#     if L[2]==0:
#         dim = 2;
#     else:
#         dim = 3;            
#                     
#     SetGeometricParameters(model,L,r,smoothingKernelFunc);
#     model.SetParameter("DTime","%e" % (0.2*((1.3*r)/speedsound)));
#     model.SetParameter("ParticlesPerCell","50");
#     model.SetParameter("MaxSteps","1000000");
#     model.SetParameter("Epsilon","0.2");
#     model.SetParameter("ViscEtq","0.1");
#     model.SetParameter("ViscAlpha","2.5");
#     model.SetParameter("ViscBeta","5.0");
#     model.SetParameter("DTime","%e" % (0.2*((1.3*r)/speedsound)));
#     model.SetParameter("SpeedSound","%e" % speedsound);
#     model.SetParameter("InitialDensity","%e" % density);
#     model.SetParameter("DensityRateAlgorithm","3");
#     model.SetParameter("SmoothingKernelFunc","%d" % smoothingKernelFunc);
#     model.SetParameter("Dim","%d" % dim);
#     model.SetParameter("AlgorithmSPH","2");
#     model.SetParameter("BoundaryUpdateStep","1");
#     model.SetParameter("isBoundaryDensityLowLimit","false");
#     model.SetParameter("IsExternalForce","false");
#     model.SetParameter("IsAverageVelocity","true");
#     model.SetParameter("isAlternateAverageVelocity","true");
#     model.SetParameter("IsVisc","false");
#     model.SetParameter("Visc","false");
#     model.SetParameter("IsViscArtificial","true");
#     model.SetParameter("IsNoSlip","false");
#     model.SetParameter("IsSurfaceTension","false");
#     model.SetParameter("IsDeltaSPH","false");
#     model.SetParameter("delta","0.1");
#     model.SetParameter("IsLaminarVisc","false");
#     model.SetParameter("IsSpsVisc","false");
#     model.SetParameter("EOS","1");
#     model.SetParameter("MonaghanB","");
#     model.SetParameter("MonaghanGamma","");
#     model.SetParameter("DensityFunction","");
#     model.SetParameter("IsRepulsiveForceBC","false");
#     model.SetParameter("IsShepard","false");
#     model.SetParameter("ShepardStep","");
#     model.SetParameter("Viscosity","");
#     model.SetParameter("ShearModulus","%e" % shearmodulus);
#     model.SetParameter("BulkModulus","%e" % bulkmodulus);
#     model.SetParameter("PoissonRatio","%e" % poissonratio);
#     model.SetParameter("YoungModulus","%e" % youngmodulus);
#     model.SetParameter("deltaRmat","%e" % (1e-12 * 1.667e-05));
#     model.SetParameter("yieldTensileStrength","%e" % yieldtensilestrength);
#     model.SetParameter("KDamage","%e" % kdamage);
#     model.SetParameter("MDamage","%e" % mdamage);
#     model.SetParameter("IsSolids","true");
#     model.SetParameter("IsDamage","false");
#     model.SetParameter("IsPlasticityCorr","false");
#     model.SetParameter("IsTensileInstCorr","true");
#     model.SetParameter("IsFlags","false");
#     model.SetParameter("IsReverseMoving","true");
#     model.SetParameter("IsDensityBound","false");
#     model.SetParameter("IsAssociatedFlowRule","true");
#     model.SetParameter("IsDPbased","true");
#     model.SetParameter("IsDamping","false");
#     model.SetParameter("IsAlternateViscArtificial","false");
#     model.SetParameter("ViscAlphamin","1.0");
#     model.SetParameter("ViscAlphamax","2.5");
#     model.SetParameter("IsContactForce","false");
#     model.SetParameter("IsForcedBoundaries","false");
#     model.SetParameter("IsStressedBoundaries","false");
#     model.SetParameter("IsPlaneStress","false");
#     model.SetParameter("IsPlaneStrain","true");
#     model.SetParameter("IsPlaneStrain2PlaneStress","true");
#     model.SetParameter("IsElastoPlasticDamage","true");
#     model.SetParameter("IsDruckerPragerPlasticity","true");
#     model.SetParameter("DPcohesionSoftening","1");
#     model.SetParameter("DPYieldsurface","1");
#     model.SetParameter("IsDPApexCriterion","false");
#     model.SetParameter("IsDPTensileCrackingCriterion","false");
#     model.SetParameter("BoundaryNormalTolerance","0.02");
#     model.SetParameter("Cohesion","%e" % cohesion);
#     model.SetParameter("FrictionAngle","%e" % frictionangle);
#     model.SetParameter("DilatancyAngle","%e" % (frictionangle/10.0));
#     model.SetParameter("YieldShearStrength","");
#     model.SetParameter("YieldCompressiveStrength","");
#     model.SetParameter("YieldBiaxialCompressiveStrength","");
#     model.SetParameter("CohnPt1","%e" % cohnpt1);
#     model.SetParameter("CohnPt2","%e" % cohnpt2);
#     model.SetParameter("PlastStrainPt1","%e" % plasstrpt1);
#     model.SetParameter("PlastStrainPt2","%e" % plasstrpt2);
#     model.SetParameter("EpsilonRmat","0.05");
#     model.SetParameter("FluidPrefix","fluid");
#     model.SetParameter("BoundaryPrefix","boundary");
#     model.SetParameter("SolidPrefix","solid");
#     model.SetParameter("VisualizationExt",".vtp");
#     model.SetParameter("VisualizationDir","./output");
#     model.SetParameter("StepsPerSnapshot","10000");
#     model.SetParameter("CurrentStep","0");
#     model.SetParameter("StepsPerFrame","1000");
#     model.SetParameter("CheckpointPrefix","checkpoint");
#     model.SetParameter("CheckpointExt",".vtp");
#     model.SetParameter("CheckpointDir","./checkpoint");
#     model.SetParameter("OutputFormat","binary");
#     model.SetParameter("Cg","%e" % (0.4*speedsound));
#     model.SetParameter("PlasticityModel","2");
#     model.SetParameter("DamageModel","1");
#     model.SetParameter("DampingCoef","0.02");
#     model.SetParameter("IsImposedDisplacement","false");
#     model.SetParameter("BoundariesRampTime","0");
#     model.SetParameter("ReverseMovingX","false");
#     model.SetParameter("ReverseMovingY","true");
#     model.SetParameter("ReverseMovingZ","false");
#     model.SetParameter("IsCrack","false");
#     model.SetParameter("IsFloatingObject","false");
#     model.SetParameter("IsBoundaryForce","false");
#     model.SetParameter("IntegrationScheme","1");
#     model.SetParameter("VerletStep","40");
#     model.SetParameter("NumberOfPhases","2");
#     model.SetParameter("GravityX","0");
#     model.SetParameter("GravityY","0");
#     model.SetParameter("GravityZ","0");
#     model.SetParameter("IsPeriodicBoundaryX","false");
#     model.SetParameter("IsPeriodicBoundaryY","false");
#     model.SetParameter("IsPeriodicBoundaryZ","False");
#     model.SetParameter("IsHydroDamping","false");
#     model.SetParameter("HydroDampingCoef","0.001");
#     model.SetParameter("IsSolidLayered","true");

